
/* 
    { LICENSE }
*/

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

/* Test / Don't use it. */

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

#include "../JuceLibraryCode/JuceHeader.h"

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

#include <signal.h>

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

static bool running = true;

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

void intHandler(int dummy = 0) { running = false; }     /* Stop me with CTRL-C please! */

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

int main(int argc, char* argv[])
{
    signal(SIGINT, intHandler);
    
    NamedPipe pipe;
    pipe.createNewPipe("jojoLapin1234");
    
    String myText("HelloWorld!");
    const MemoryBlock msg(myText.toRawUTF8(), myText.getNumBytesAsUTF8() + 1);
    
    while (running) { 
    //
    DBG("Pipe1"); 
    int result = pipe.write(msg.getData(), msg.getSize(), -1);    /* Caution: block until jojoPipe2. */
    DBG(result);
    Thread::sleep(1000);
    //
    }
    
    return 0;
}

// ------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------

